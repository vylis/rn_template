{"version":3,"names":["UIView","pointerEvents","accessible","accessibilityActions","accessibilityLabel","accessibilityLiveRegion","accessibilityRole","accessibilityState","accessibilityValue","accessibilityHint","accessibilityLanguage","importantForAccessibility","nativeID","testID","renderToHardwareTextureAndroid","shouldRasterizeIOS","onLayout","onAccessibilityAction","onAccessibilityTap","onMagicTap","onAccessibilityEscape","collapsable","needsOffscreenAlphaCompositing","style","ReactNativeStyleAttributes","RCTView","removeClippedSubviews","ReactNativeViewAttributes","module","exports"],"sources":["ReactNativeViewAttributes.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\nimport ReactNativeStyleAttributes from './ReactNativeStyleAttributes';\n\nconst UIView = {\n  pointerEvents: true,\n  accessible: true,\n  accessibilityActions: true,\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  accessibilityHint: true,\n  accessibilityLanguage: true,\n  importantForAccessibility: true,\n  nativeID: true,\n  testID: true,\n  renderToHardwareTextureAndroid: true,\n  shouldRasterizeIOS: true,\n  onLayout: true,\n  onAccessibilityAction: true,\n  onAccessibilityTap: true,\n  onMagicTap: true,\n  onAccessibilityEscape: true,\n  collapsable: true,\n  needsOffscreenAlphaCompositing: true,\n  style: ReactNativeStyleAttributes,\n};\n\nconst RCTView = {\n  ...UIView,\n\n  // This is a special performance property exposed by RCTView and useful for\n  // scrolling content when there are many subviews, most of which are offscreen.\n  // For this property to be effective, it must be applied to a view that contains\n  // many subviews that extend outside its bound. The subviews must also have\n  // overflow: hidden, as should the containing view (or one of its superviews).\n  removeClippedSubviews: true,\n};\n\nconst ReactNativeViewAttributes = {\n  UIView: UIView,\n  RCTView: RCTView,\n};\n\nmodule.exports = ReactNativeViewAttributes;\n"],"mappings":"AAUA;;;;AACA;;AAEA,IAAMA,MAAM,GAAG;EACbC,aAAa,EAAE,IADF;EAEbC,UAAU,EAAE,IAFC;EAGbC,oBAAoB,EAAE,IAHT;EAIbC,kBAAkB,EAAE,IAJP;EAKbC,uBAAuB,EAAE,IALZ;EAMbC,iBAAiB,EAAE,IANN;EAObC,kBAAkB,EAAE,IAPP;EAQbC,kBAAkB,EAAE,IARP;EASbC,iBAAiB,EAAE,IATN;EAUbC,qBAAqB,EAAE,IAVV;EAWbC,yBAAyB,EAAE,IAXd;EAYbC,QAAQ,EAAE,IAZG;EAabC,MAAM,EAAE,IAbK;EAcbC,8BAA8B,EAAE,IAdnB;EAebC,kBAAkB,EAAE,IAfP;EAgBbC,QAAQ,EAAE,IAhBG;EAiBbC,qBAAqB,EAAE,IAjBV;EAkBbC,kBAAkB,EAAE,IAlBP;EAmBbC,UAAU,EAAE,IAnBC;EAoBbC,qBAAqB,EAAE,IApBV;EAqBbC,WAAW,EAAE,IArBA;EAsBbC,8BAA8B,EAAE,IAtBnB;EAuBbC,KAAK,EAAEC;AAvBM,CAAf;AA0BA,IAAMC,OAAO,qBACRzB,MADQ;EAQX0B,qBAAqB,EAAE;AARZ,EAAb;AAWA,IAAMC,yBAAyB,GAAG;EAChC3B,MAAM,EAAEA,MADwB;EAEhCyB,OAAO,EAAEA;AAFuB,CAAlC;AAKAG,MAAM,CAACC,OAAP,GAAiBF,yBAAjB"}