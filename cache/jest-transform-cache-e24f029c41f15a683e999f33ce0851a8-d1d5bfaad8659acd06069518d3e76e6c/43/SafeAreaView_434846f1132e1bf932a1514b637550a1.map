{"version":3,"names":["exported","Platform","OS","React","forwardRef","SafeAreaView","props","forwardedRef","emulateUnlessSupported","localProps","RCTSafeAreaViewNativeComponent","require","default"],"sources":["SafeAreaView.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport Platform from '../../Utilities/Platform';\nimport * as React from 'react';\nimport View from '../View/View';\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n  emulateUnlessSupported?: boolean,\n|}>;\n\nlet exported: React.AbstractComponent<\n  Props,\n  React.ElementRef<HostComponent<mixed>>,\n>;\n\n/**\n * Renders nested content and automatically applies paddings reflect the portion\n * of the view that is not covered by navigation bars, tab bars, toolbars, and\n * other ancestor views.\n *\n * Moreover, and most importantly, Safe Area's paddings reflect physical\n * limitation of the screen, such as rounded corners or camera notches (aka\n * sensor housing area on iPhone X).\n */\nif (Platform.OS === 'android') {\n  exported = React.forwardRef<Props, React.ElementRef<HostComponent<mixed>>>(\n    function SafeAreaView(props, forwardedRef) {\n      const {emulateUnlessSupported, ...localProps} = props;\n      return <View {...localProps} ref={forwardedRef} />;\n    },\n  );\n} else {\n  const RCTSafeAreaViewNativeComponent =\n    require('./RCTSafeAreaViewNativeComponent').default;\n\n  exported = React.forwardRef<Props, React.ElementRef<HostComponent<mixed>>>(\n    function SafeAreaView(props, forwardedRef) {\n      return (\n        <RCTSafeAreaViewNativeComponent\n          emulateUnlessSupported={true}\n          {...props}\n          ref={forwardedRef}\n        />\n      );\n    },\n  );\n}\n\nexport default exported;\n"],"mappings":";;;;;;;;;;;AAUA;;AACA;;AACA;;;;;;;;AAUA,IAAIA,QAAJ;;AAcA,IAAIC,iBAAA,CAASC,EAAT,KAAgB,SAApB,EAA+B;EAC7BF,QAAQ,GAAGG,KAAK,CAACC,UAAN,CACT,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,YAA7B,EAA2C;IACzC,IAAOC,sBAAP,GAAgDF,KAAhD,CAAOE,sBAAP;IAAA,IAAkCC,UAAlC,0CAAgDH,KAAhD;IACA,OAAO,oBAAC,aAAD,6BAAUG,UAAV;MAAsB,GAAG,EAAEF;IAA3B,GAAP;EACD,CAJQ,CAAX;AAMD,CAPD,MAOO;EACL,IAAMG,8BAA8B,GAClCC,OAAO,CAAC,kCAAD,CAAP,CAA4CC,OAD9C;;EAGAZ,QAAQ,GAAGG,KAAK,CAACC,UAAN,CACT,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,YAA7B,EAA2C;IACzC,OACE,oBAAC,8BAAD;MACE,sBAAsB,EAAE;IAD1B,GAEMD,KAFN;MAGE,GAAG,EAAEC;IAHP,GADF;EAOD,CATQ,CAAX;AAWD;;eAEcP,Q"}